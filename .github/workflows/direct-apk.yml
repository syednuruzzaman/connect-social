name: Direct Android APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup Java 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Install Android SDK
      run: |
        # Install Android SDK directly
        sudo apt-get update
        sudo apt-get install -y wget unzip
        
        # Download Android SDK
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        
        # Setup SDK directories
        mkdir -p $HOME/android-sdk/cmdline-tools
        mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        
        # Export paths
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
        export PATH=$ANDROID_HOME/platform-tools:$PATH
        
        # Accept licenses and install packages
        yes | sdkmanager --licenses >/dev/null 2>&1
        sdkmanager "platform-tools" "platforms;android-29" "build-tools;29.0.3" >/dev/null 2>&1
        
        # Persist environment variables
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/android-sdk/build-tools/29.0.3" >> $GITHUB_PATH
        
        echo "✅ Android SDK installed successfully"
        
    - name: Create Direct Android Project
      run: |
        # Create main project directory
        mkdir -p DirectConnectApp
        cd DirectConnectApp
        
        # Create proper Gradle wrapper setup
        echo "Creating Gradle wrapper..."
        
        # Create gradle directory structure
        mkdir -p gradle/wrapper
        
        # Download gradle-wrapper.jar
        wget -q -O gradle/wrapper/gradle-wrapper.jar \
          https://github.com/gradle/gradle/raw/v6.9.4/gradle/wrapper/gradle-wrapper.jar
        
        # Create gradle-wrapper.properties
        cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-6.9.4-all.zip
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF
        
        # Download gradlew scripts
        wget -q -O gradlew \
          https://github.com/gradle/gradle/raw/v6.9.4/gradlew
        wget -q -O gradlew.bat \
          https://github.com/gradle/gradle/raw/v6.9.4/gradlew.bat
        
        chmod +x gradlew
        
        # Verify Gradle wrapper
        echo "Testing Gradle wrapper..."
        ./gradlew --version
        
        # Create root build.gradle
        cat > build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:4.2.2'
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF
        
        # Create settings.gradle
        cat > settings.gradle << 'EOF'
        include ':app'
        rootProject.name = "DirectConnectApp"
        EOF
        
        # Create local.properties
        cat > local.properties << EOF
        sdk.dir=$ANDROID_HOME
        EOF
        
        # Create gradle.properties with AndroidX support
        cat > gradle.properties << 'EOF'
        # AndroidX package structure to make it clearer which packages are bundled with the
        # Android operating system, and which are packaged with your app's APK
        android.useAndroidX=true
        # Automatically convert third-party libraries to use AndroidX
        android.enableJetifier=true
        # Enables namespacing of each library's R class so that its R class includes only the
        # resources declared in the library itself and none from the library's dependencies,
        # thereby reducing the size of the R class for that library
        android.nonTransitiveRClass=true
        # Enable Gradle build cache
        org.gradle.caching=true
        # Enable parallel builds
        org.gradle.parallel=true
        # Configure JVM arguments
        org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
        EOF
        
        echo "✅ Project structure created"
        
    - name: Create App Module
      run: |
        cd DirectConnectApp
        
        # Create app directory structure
        mkdir -p app/src/main/java/com/connect/social
        mkdir -p app/src/main/res/{values,layout,drawable,mipmap-hdpi,mipmap-mdpi,mipmap-xhdpi,mipmap-xxhdpi,mipmap-xxxhdpi}
        
        # Create app/build.gradle
        cat > app/build.gradle << 'EOF'
        apply plugin: 'com.android.application'
        
        android {
            compileSdkVersion 29
            buildToolsVersion "29.0.3"
            
            defaultConfig {
                applicationId "com.connect.social"
                minSdkVersion 21
                targetSdkVersion 29
                versionCode 1
                versionName "1.0"
            }
            
            buildTypes {
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
                debug {
                    minifyEnabled false
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }
        
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.2.0'
            implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
        }
        EOF
        
        # Create AndroidManifest.xml
        cat > app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android"
            package="com.connect.social">
            
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            
            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:theme="@style/AppTheme"
                android:usesCleartextTraffic="true">
                <activity 
                    android:name=".MainActivity"
                    android:exported="true"
                    android:screenOrientation="portrait">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
        echo "✅ App module structure created"
        
    - name: Create MainActivity and Resources
      run: |
        cd DirectConnectApp
        
        # Create MainActivity.java with enhanced features
        cat > app/src/main/java/com/connect/social/MainActivity.java << 'EOF'
        package com.connect.social;
        
        import androidx.appcompat.app.AppCompatActivity;
        import android.os.Bundle;
        import android.webkit.WebView;
        import android.webkit.WebViewClient;
        import android.webkit.WebSettings;
        import android.widget.Toast;
        
        public class MainActivity extends AppCompatActivity {
            
            private WebView webView;
            
            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                
                // Create and configure WebView
                webView = new WebView(this);
                
                // Configure WebView settings
                WebSettings settings = webView.getSettings();
                settings.setJavaScriptEnabled(true);
                settings.setDomStorageEnabled(true);
                settings.setAllowFileAccess(true);
                settings.setAllowContentAccess(true);
                settings.setLoadWithOverviewMode(true);
                settings.setUseWideViewPort(true);
                settings.setBuiltInZoomControls(false);
                settings.setDisplayZoomControls(false);
                
                // Set WebView client
                webView.setWebViewClient(new WebViewClient() {
                    @Override
                    public void onPageFinished(WebView view, String url) {
                        super.onPageFinished(view, url);
                        Toast.makeText(MainActivity.this, "Connect Social Loaded!", Toast.LENGTH_SHORT).show();
                    }
                });
                
                // Load the Connect Social content
                String htmlContent = getConnectSocialHTML();
                webView.loadDataWithBaseURL(null, htmlContent, "text/html", "UTF-8", null);
                
                setContentView(webView);
            }
            
            private String getConnectSocialHTML() {
                return "<!DOCTYPE html>" +
                    "<html lang='en'>" +
                    "<head>" +
                    "<meta charset='UTF-8'>" +
                    "<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'>" +
                    "<title>Connect Social</title>" +
                    "<style>" +
                    "* { margin: 0; padding: 0; box-sizing: border-box; }" +
                    "body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; min-height: 100vh; overflow-x: hidden; }" +
                    ".container { padding: 20px; text-align: center; min-height: 100vh; display: flex; flex-direction: column; justify-content: center; }" +
                    ".logo { font-size: 5em; margin-bottom: 20px; animation: glow 2s ease-in-out infinite alternate; }" +
                    "@keyframes glow { from { text-shadow: 0 0 20px #fff; } to { text-shadow: 0 0 30px #fff, 0 0 40px #fff; } }" +
                    "h1 { font-size: 2.8em; margin: 20px 0; text-shadow: 0 3px 6px rgba(0,0,0,0.4); }" +
                    ".subtitle { font-size: 1.3em; margin-bottom: 40px; opacity: 0.9; line-height: 1.6; }" +
                    ".features-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin: 40px 0; }" +
                    ".feature-card { background: rgba(255,255,255,0.15); padding: 20px; border-radius: 20px; backdrop-filter: blur(10px); transition: transform 0.3s ease; }" +
                    ".feature-card:hover { transform: translateY(-5px); }" +
                    ".feature-icon { font-size: 2.5em; margin-bottom: 10px; }" +
                    ".feature-title { font-weight: bold; margin-bottom: 5px; }" +
                    ".button-container { margin: 40px 0; }" +
                    ".btn { background: rgba(255,255,255,0.2); border: 2px solid white; color: white; padding: 18px 35px; border-radius: 50px; font-size: 18px; margin: 10px; cursor: pointer; transition: all 0.3s ease; display: inline-block; text-decoration: none; min-width: 150px; }" +
                    ".btn:hover { background: rgba(255,255,255,0.3); transform: translateY(-3px); box-shadow: 0 10px 25px rgba(0,0,0,0.3); }" +
                    ".btn.primary { background: rgba(255,255,255,0.9); color: #667eea; font-weight: bold; }" +
                    ".btn.primary:hover { background: white; }" +
                    ".footer { margin-top: 50px; font-size: 0.9em; opacity: 0.8; }" +
                    ".version-info { background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px; margin-top: 20px; }" +
                    "@media (max-width: 480px) {" +
                    "  .features-grid { grid-template-columns: 1fr; }" +
                    "  .logo { font-size: 4em; }" +
                    "  h1 { font-size: 2.2em; }" +
                    "}" +
                    "</style>" +
                    "</head>" +
                    "<body>" +
                    "<div class='container'>" +
                    "<div class='logo'>📱</div>" +
                    "<h1>Connect Social</h1>" +
                    "<div class='subtitle'>The Ultimate Social Media Experience<br>Built for Android • Ready for Google Play</div>" +
                    "<div class='features-grid'>" +
                    "<div class='feature-card'>" +
                    "<div class='feature-icon'>🚀</div>" +
                    "<div class='feature-title'>Lightning Fast</div>" +
                    "<div>Optimized performance</div>" +
                    "</div>" +
                    "<div class='feature-card'>" +
                    "<div class='feature-icon'>🎨</div>" +
                    "<div class='feature-title'>Beautiful Design</div>" +
                    "<div>Modern & intuitive</div>" +
                    "</div>" +
                    "<div class='feature-card'>" +
                    "<div class='feature-icon'>🔒</div>" +
                    "<div class='feature-title'>Privacy First</div>" +
                    "<div>Your data is safe</div>" +
                    "</div>" +
                    "<div class='feature-card'>" +
                    "<div class='feature-icon'>📱</div>" +
                    "<div class='feature-title'>Mobile Ready</div>" +
                    "<div>Touch optimized</div>" +
                    "</div>" +
                    "</div>" +
                    "<div class='button-container'>" +
                    "<button class='btn primary' onclick='startApp()'>Launch App</button>" +
                    "<button class='btn' onclick='showFeatures()'>Explore Features</button>" +
                    "</div>" +
                    "<div class='footer'>" +
                    "<div class='version-info'>" +
                    "Connect Social v1.0<br>" +
                    "Production Ready • Google Play Store Optimized<br>" +
                    "Built with ❤️ for Android" +
                    "</div>" +
                    "</div>" +
                    "</div>" +
                    "<script>" +
                    "function startApp() {" +
                    "  alert('🎉 Welcome to Connect Social!\\n\\n✨ Experience includes:\\n\\n• Beautiful modern interface\\n• Lightning-fast performance\\n• Secure and private\\n• Ready for production use\\n\\nEnjoy connecting with friends!');" +
                    "}" +
                    "function showFeatures() {" +
                    "  alert('📱 Connect Social Features:\\n\\n🚀 Performance:\\n• Native Android WebView\\n• Optimized loading\\n• Smooth animations\\n\\n🎨 Design:\\n• Modern Material Design\\n• Dark/Light themes\\n• Responsive layout\\n\\n🔒 Security:\\n• Privacy-focused\\n• Secure connections\\n• Data protection\\n\\n📱 Mobile:\\n• Touch gestures\\n• Offline support\\n• Push notifications');" +
                    "}" +
                    "// Add some interactive effects" +
                    "document.addEventListener('DOMContentLoaded', function() {" +
                    "  const featureCards = document.querySelectorAll('.feature-card');" +
                    "  featureCards.forEach((card, index) => {" +
                    "    setTimeout(() => {" +
                    "      card.style.opacity = '1';" +
                    "      card.style.transform = 'translateY(0)';" +
                    "    }, index * 200);" +
                    "  });" +
                    "});" +
                    "</script>" +
                    "</body>" +
                    "</html>";
            }
            
            @Override
            public void onBackPressed() {
                if (webView.canGoBack()) {
                    webView.goBack();
                } else {
                    super.onBackPressed();
                }
            }
        }
        EOF
        
        # Create strings.xml
        cat > app/src/main/res/values/strings.xml << 'EOF'
        <resources>
            <string name="app_name">Connect Social</string>
        </resources>
        EOF
        
        # Create styles.xml with modern theme
        cat > app/src/main/res/values/styles.xml << 'EOF'
        <resources>
            <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
                <item name="colorPrimary">#667eea</item>
                <item name="colorPrimaryDark">#764ba2</item>
                <item name="colorAccent">#667eea</item>
                <item name="android:statusBarColor">#764ba2</item>
            </style>
        </resources>
        EOF
        
        # Create app icon
        cat > app/src/main/res/drawable/ic_launcher_background.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="108dp"
            android:height="108dp"
            android:viewportWidth="108"
            android:viewportHeight="108">
            <path android:fillColor="#667eea"
                android:pathData="M0,0h108v108h-108z"/>
        </vector>
        EOF
        
        cat > app/src/main/res/drawable/ic_launcher_foreground.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="108dp"
            android:height="108dp"
            android:viewportWidth="108"
            android:viewportHeight="108">
            <group android:scaleX="0.5"
                android:scaleY="0.5"
                android:translateX="27"
                android:translateY="27">
                <path android:fillColor="#ffffff"
                    android:pathData="M54,10c24.3,0 44,19.7 44,44s-19.7,44 -44,44s-44,-19.7 -44,-44S29.7,10 54,10z"/>
                <path android:fillColor="#667eea"
                    android:pathData="M54,20c18.8,0 34,15.2 34,34s-15.2,34 -34,34s-34,-15.2 -34,-34S35.2,20 54,20z"/>
                <path android:fillColor="#ffffff"
                    android:pathData="M44,34h20v6h-20z"/>
                <path android:fillColor="#ffffff"
                    android:pathData="M44,44h20v6h-20z"/>
                <path android:fillColor="#ffffff"
                    android:pathData="M44,54h12v6h-12z"/>
            </group>
        </vector>
        EOF
        
        # Create simple launcher icon for older API levels (API < 26)
        cat > app/src/main/res/drawable/ic_launcher.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="48dp"
            android:height="48dp"
            android:viewportWidth="48"
            android:viewportHeight="48">
            <path android:fillColor="#667eea"
                android:pathData="M0,0h48v48h-48z"/>
            <path android:fillColor="#ffffff"
                android:pathData="M24,6c9.9,0 18,8.1 18,18s-8.1,18 -18,18s-18,-8.1 -18,-18S14.1,6 24,6z"/>
            <path android:fillColor="#667eea"
                android:pathData="M24,10c7.7,0 14,6.3 14,14s-6.3,14 -14,14s-14,-6.3 -14,-14S16.3,10 24,10z"/>
            <path android:fillColor="#ffffff"
                android:pathData="M18,18h12v3h-12z"/>
            <path android:fillColor="#ffffff"
                android:pathData="M18,23h12v3h-12z"/>
            <path android:fillColor="#ffffff"
                android:pathData="M18,28h8v3h-8z"/>
        </vector>
        EOF
        
        # Copy regular icons to all mipmap folders (for API < 26)
        for size in hdpi mdpi xhdpi xxhdpi xxxhdpi; do
            cp app/src/main/res/drawable/ic_launcher.xml app/src/main/res/mipmap-$size/ic_launcher.xml
        done
        
        # For API 26+ devices, create adaptive icons in mipmap-anydpi-v26
        mkdir -p app/src/main/res/mipmap-anydpi-v26
        cat > app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@drawable/ic_launcher_background" />
            <foreground android:drawable="@drawable/ic_launcher_foreground" />
        </adaptive-icon>
        EOF
        
        echo "✅ MainActivity and resources created"
        
    - name: Build the APK
      run: |
        cd DirectConnectApp
        
        echo "🔨 Starting APK build process..."
        
        # Clean any previous builds
        ./gradlew clean
        
        # Build debug APK
        ./gradlew assembleDebug --stacktrace --info --no-daemon
        
        echo "🔍 Checking build results..."
        find . -name "*.apk" -type f
        
        # Verify APK was created
        APK_PATH="app/build/outputs/apk/debug/app-debug.apk"
        if [ -f "$APK_PATH" ]; then
          echo "✅ APK built successfully!"
          echo "📁 APK Location: $APK_PATH"
          echo "📊 APK Details:"
          ls -lh "$APK_PATH"
          file "$APK_PATH"
          
          # Verify it's a valid APK
          if file "$APK_PATH" | grep -E -q "Zip archive|Android package"; then
            echo "✅ APK file format verified"
          else
            echo "❌ APK file format verification failed"
            exit 1
          fi
        else
          echo "❌ APK build failed - file not found"
          echo "📂 Checking build directory structure:"
          find app/build -type f -name "*.apk" 2>/dev/null || echo "No APK files found"
          echo "📂 Build outputs directory:"
          ls -la app/build/outputs/ 2>/dev/null || echo "Outputs directory not found"
          exit 1
        fi
        
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: connect-social-direct-apk
        path: DirectConnectApp/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
